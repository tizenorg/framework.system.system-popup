CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(sys_device_noti C)

IF(${SYSTEM_APPS_MICRO} STREQUAL "yes")
SET(SRCS ${SRCS}
	${CMAKE_SOURCE_DIR}/sys-device-noti/sys-device-noti-micro.c
)
ELSE()
SET(SRCS ${SRC}
	${CMAKE_SOURCE_DIR}/sys-device-noti/sys-device-noti.c
	 ${CMAKE_SOURCE_DIR}/share/common.c
)
ENDIF()

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/share)

INCLUDE(FindPkgConfig)
IF(${SYSTEM_APPS_MICRO} STREQUAL "yes")
pkg_check_modules(pkgs REQUIRED feedback)
ELSE()
pkg_check_modules(pkgs REQUIRED feedback notification)
ENDIF()
FOREACH(flag ${pkgs_CFLAGS})
	SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${flag}")
ENDFOREACH(flag)

SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} -g -fno-omit-frame-pointer -finstrument-functions")

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS}")
MESSAGE("FLAGS: ${CMAKE_C_FLAGS}")

ADD_DEFINITIONS("-DPREFIX=\"${CMAKE_INSTALL_PREFIX}\"")
ADD_DEFINITIONS("-DFACTORYFS=\"$ENV{FACTORYFS}\"")
IF( $ENV{ARCH} MATCHES "arm" )
	ADD_DEFINITIONS("-DTARGET")
ENDIF()
ADD_DEFINITIONS("-DSLP_DEBUG")
ADD_DEFINITIONS("-DSLP_PROF")

ADD_EXECUTABLE(${PROJECT_NAME} ${SRCS})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${pkgs_LDFLAGS})

INSTALL(TARGETS ${PROJECT_NAME} DESTINATION bin)

IF(${SYSTEM_APPS_MICRO} STREQUAL "yes")
ELSE()
# install icon
INSTALL(FILES ${CMAKE_SOURCE_DIR}/data/batt_full_icon.png DESTINATION ${SYSTEM_ICONDIR})
INSTALL(FILES ${CMAKE_SOURCE_DIR}/data/batt_full_indicator.png DESTINATION ${SYSTEM_ICONDIR})
ENDIF()
